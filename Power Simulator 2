
local lIllIil1I1i1IiIlIiI11 = assert local lIlIll1Illl1iIiiI1lIl = select local l1l1lii1l1liIiiiIil = tonumber local lIl11lIlll1llIl1lIiii = unpack local li1I11i1iIlliIllI1l = pcall local iI1iiI1iiilllilllII = setfenv local IiiiIiIl11II1IIl1l1 = setmetatable local i11iiIi11ii1i1iilII = type local lIIli1IIl1ilII1ll11 = getfenv local lIllIlII1iiIl11lI1iii = tostring local l1I1liIili111Iili1I = error local lIlllliiI1i1lIIl1IlIi = string.sub local ll11I11Ill11lil11Il = string.byte local lIlIliiIl1lIllIiiI1Il = string.char local iIlI1Ilili1l1iiilll = string.rep local lIi1liiII1i1il1I1il = string.gsub local iilIII1iiilII1IiI1i = string.match local lIllIllliliiIIi111I = table.insert local I1l1iIiii1III11Ilil = ll11I11Ill11lil11Il("o", 1) local IIiliilliIilliiiIi1, il1lili1iliIlI1111i = #{5787}, #{ 4099, 3426, 6001, 899, 6934, 5298, 2256, 3808, 1427, 79, 1805, 6352, 3056, 3601, 6484, 4393, 137, 2258, 388, 690, 1697 } + I1l1iIiii1III11Ilil + 130939 local lIIlI11Illii111liII = {} local illll1iIl1lIIIl1i1I = 1 local lIliiillii1iiliilii, lIlll1il1IIiIiiIlI1ii local function lI1iii1lIII1iliIi1l(l1Iilil11lI11llII1l, lIli1l1I1I1IIIiiiIIll) local ll1lIiiilIlI1I1l1II l1Iilil11lI11llII1l = lIi1liiII1i1il1I1il(lIlllliiI1i1lIIl1IlIi(l1Iilil11lI11llII1l, 5), "..", function(lIlli1liili11l1ill1lI) if ll11I11Ill11lil11Il(lIlli1liili11l1ill1lI, 2) == 72 then ll1lIiiilIlI1I1l1II = l1l1lii1l1liIiiiIil(lIlllliiI1i1lIIl1IlIi(lIlli1liili11l1ill1lI, 1, 1)) return "" else local II1lIil11iIiliili11 = lIlIliiIl1lIllIiiI1Il(l1l1lii1l1liIiiiIil(lIlli1liili11l1ill1lI, 16)) if ll1lIiiilIlI1I1l1II then local lil1iiliII1iiIl1111 = iIlI1Ilili1l1iiilll(II1lIil11iIiliili11, ll1lIiiilIlI1I1l1II) ll1lIiiilIlI1I1l1II = nil return lil1iiliII1iiIl1111 else return II1lIil11iIiliili11 end end end) local function I11liI1iii1iII11Iil() local IiIlllIl11111Il1I1l = ll11I11Ill11lil11Il(l1Iilil11lI11llII1l, illll1iIl1lIIIl1i1I, illll1iIl1lIIIl1i1I) illll1iIl1lIIIl1i1I = illll1iIl1lIIIl1i1I + 1 return IiIlllIl11111Il1I1l end local function liliil1li11Ii1IIil1() local IiIlllIl11111Il1I1l, II1lIil11iIiliili11, lil1iiliII1iiIl1111, i11iiiIIlI1iiiI1I11 = ll11I11Ill11lil11Il(l1Iilil11lI11llII1l, illll1iIl1lIIIl1i1I, illll1iIl1lIIIl1i1I + 3) illll1iIl1lIIIl1i1I = illll1iIl1lIIIl1i1I + 4 return i11iiiIIlI1iiiI1I11 * 16777216 + lil1iiliII1iiIl1111 * 65536 + II1lIil11iIiliili11 * 256 + IiIlllIl11111Il1I1l end local function i1IllIllIil1iiilil1(IIliII1Ill1iiii11l1, iillI111lII1ill11ii, I1l1li1li1II111Il1i) if I1l1li1li1II111Il1i then local lIl1lIi1i1iilii1lli1l, lll1I1ilI11i1III1il = 0, 0 for lIlIl11il1I1iill1iill = iillI111lII1ill11ii, I1l1li1li1II111Il1i do lIl1lIi1i1iilii1lli1l = lIl1lIi1i1iilii1lli1l + 2 ^ lll1I1ilI11i1III1il * i1IllIllIil1iiilil1(IIliII1Ill1iiii11l1, lIlIl11il1I1iill1iill) lll1I1ilI11i1III1il = lll1I1ilI11i1III1il + 1 end return lIl1lIi1i1iilii1lli1l else local II1li1i1IlIil1I11Il = 2 ^ (iillI111lII1ill11ii - 1) return II1li1i1IlIil1I11Il <= IIliII1Ill1iiii11l1 % (II1li1i1IlIil1I11Il + II1li1i1IlIil1I11Il) and 1 or 0 end end local function I11II1lIIIli1llii1I() local IiIlllIl11111Il1I1l, II1lIil11iIiliili11 = liliil1li11Ii1IIil1(), liliil1li11Ii1IIil1() if IiIlllIl11111Il1I1l == 0 and II1lIil11iIiliili11 == 0 then return 0 end return (-2 * i1IllIllIil1iiilil1(II1lIil11iIiliili11, 32) + 1) * 2 ^ (i1IllIllIil1iiilil1(II1lIil11iIiliili11, 21, 31) - 1023) * ((i1IllIllIil1iiilil1(II1lIil11iIiliili11, 1, 20) * 4294967296 + IiIlllIl11111Il1I1l) / 4503599627370496 + 1) end local lIlli11lIiIIllIl1l11I = bit or bit32 local lIl1llIIIlIlliIiiIIil = lIlli11lIiIIllIl1l11I and lIlli11lIiIIllIl1l11I.bxor or function(IiIlllIl11111Il1I1l, II1lIil11iIiliili11) local IlIiI1ilIliIlII1Ili = 1 local lil1iiliII1iiIl1111 = 0 while IiIlllIl11111Il1I1l > 0 and II1lIil11iIiliili11 > 0 do local lIl1iI1ll1IlIlII1il1l = IiIlllIl11111Il1I1l % 2 local ilillII111l1ll11iII = II1lIil11iIiliili11 % 2 if lIl1iI1ll1IlIlII1il1l ~= ilillII111l1ll11iII then lil1iiliII1iiIl1111 = lil1iiliII1iiIl1111 + IlIiI1ilIliIlII1Ili end IiIlllIl11111Il1I1l = (IiIlllIl11111Il1I1l - lIl1iI1ll1IlIlII1il1l) / 2 II1lIil11iIiliili11 = (II1lIil11iIiliili11 - ilillII111l1ll11iII) / 2 IlIiI1ilIliIlII1Ili = IlIiI1ilIliIlII1Ili * 2 end if IiIlllIl11111Il1I1l < II1lIil11iIiliili11 then IiIlllIl11111Il1I1l = II1lIil11iIiliili11 end while IiIlllIl11111Il1I1l > 0 do local lIl1iI1ll1IlIlII1il1l = IiIlllIl11111Il1I1l % 2 if lIl1iI1ll1IlIlII1il1l > 0 then lil1iiliII1iiIl1111 = lil1iiliII1iiIl1111 + IlIiI1ilIliIlII1Ili end IiIlllIl11111Il1I1l = (IiIlllIl11111Il1I1l - lIl1iI1ll1IlIlII1il1l) / 2 IlIiI1ilIliIlII1Ili = IlIiI1ilIliIlII1Ili * 2 end return lil1iiliII1iiIl1111 end local function ii1iIi11iiIiIlilll1(Iiil1iIli1lliiil1l1) local iIIII1IIIiiI1Ill11l = { ll11I11Ill11lil11Il(l1Iilil11lI11llII1l, illll1iIl1lIIIl1i1I, illll1iIl1lIIIl1i1I + 3) } illll1iIl1lIIIl1i1I = illll1iIl1lIIIl1i1I + 4 local IiIlllIl11111Il1I1l = lIl1llIIIlIlliIiiIIil(iIIII1IIIiiI1Ill11l[1], lIlll1il1IIiIiiIlI1ii) local II1lIil11iIiliili11 = lIl1llIIIlIlliIiiIIil(iIIII1IIIiiI1Ill11l[2], lIlll1il1IIiIiiIlI1ii) local lil1iiliII1iiIl1111 = lIl1llIIIlIlliIiiIIil(iIIII1IIIiiI1Ill11l[3], lIlll1il1IIiIiiIlI1ii) local i11iiiIIlI1iiiI1I11 = lIl1llIIIlIlliIiiIIil(iIIII1IIIiiI1Ill11l[4], lIlll1il1IIiIiiIlI1ii) lIlll1il1IIiIiiIlI1ii = (25 * lIlll1il1IIiIiiIlI1ii + Iiil1iIli1lliiil1l1) % 256 return i11iiiIIlI1iiiI1I11 * 16777216 + lil1iiliII1iiIl1111 * 65536 + II1lIil11iIiliili11 * 256 + IiIlllIl11111Il1I1l end local function lIl11Il11IiIIliIIlIlI(I1illliI1liil1IlIli) local lIllII11ll1liI1l1lIii = liliil1li11Ii1IIil1() local iIIiiIiiI1illlIIll1 = "" for lIlIl11il1I1iill1iill = IIiliilliIilliiiIi1, lIllII11ll1liI1l1lIii do iIIiiIiiI1illlIIll1 = iIIiiIiiI1illlIIll1 .. lIlIliiIl1lIllIiiI1Il(lIl1llIIIlIlliIiiIIil(ll11I11Ill11lil11Il(l1Iilil11lI11llII1l, illll1iIl1lIIIl1i1I + lIlIl11il1I1iill1iill - 1), lIliiillii1iiliilii)) lIliiillii1iiliilii = (I1illliI1liil1IlIli * lIliiillii1iiliilii + 233) % 256 end illll1iIl1lIIIl1i1I = illll1iIl1lIIIl1i1I + lIllII11ll1liI1l1lIii return iIIiiIiiI1illlIIll1 end lIliiillii1iiliilii = I11liI1iii1iII11Iil() lIlll1il1IIiIiiIlI1ii = I11liI1iii1iII11Iil() local l1llliiiIi1l1l1IiiI = {} for lIlIl11il1I1iill1iill = IIiliilliIilliiiIi1, I11liI1iii1iII11Iil() do local I1IIiiIIIiiIl1li1ii = I11liI1iii1iII11Iil() local IIl1i1lili11i1iilIl = (lIlIl11il1I1iill1iill - 1) * 2 l1llliiiIi1l1l1IiiI[IIl1i1lili11i1iilIl] = i1IllIllIil1iiilil1(I1IIiiIIIiiIl1li1ii, 1, 4) l1llliiiIi1l1l1IiiI[IIl1i1lili11i1iilIl + 1] = i1IllIllIil1iiilil1(I1IIiiIIIiiIl1li1ii, 5, 8) end local function l1i1I1il1Iiil1i1ll1() local ilIIlI1i1II1IliI1lI = { {}, {}, nil, {}, nil, nil, {} } local iiIII11IIlIillii1iI = liliil1li11Ii1IIil1() - (#{ 4452, 3383, 6279, 4287, 2253, 3769, 575, 2830, 4185, 725, 4603, 483, 491, 4210, 607, 368, 6642, 4997, 3284, 4737, 5604, 4629 } + I1l1iIiii1III11Ilil + 133639) local lIlil1ilIIlil111ilIlI = I11liI1iii1iII11Iil() for lIlIl11il1I1iill1iill = IIiliilliIilliiiIi1, iiIII11IIlIillii1iI do local Ilil1il1I1i11i1i1Il = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local I1IIiiIIIiiIl1li1ii = ii1iIi11iiIiIlilll1(lIlil1ilIIlil111ilIlI) Ilil1il1I1i11i1i1Il[9] = i1IllIllIil1iiilil1(I1IIiiIIIiiIl1li1ii, #{ 6252, 2682, 3494, 2894, 88, 1256, 2204, 5904, 5762, 2250 }, #{ 5886, 124, 5002, 1892, 1966, 5487, 6350, 1661, 4086, 983, 6511, 6062, 5093, 6670, 2530, 4355, 3312, 1699 }) Ilil1il1I1i11i1i1Il[6] = i1IllIllIil1iiilil1(I1IIiiIIIiiIl1li1ii, #{ 6412, 4248, 5205, 993, 4605, 2291, 1059, 1203, 3878, 2204, 181, 4909, 1906, 6676, 714, 6002, 2708, 2896, 3292, 4129, 1163, 2064, 2788 } + I1l1iIiii1III11Ilil + -107, #{ 1455, 2602, 2052, 5151, 3400, 3154, 4730, 709, 4003, 4399, 4787, 5316, 1628, 5146, 2063, 3306, 2293, 6819, 4880, 1836, 6543, 2581 } + I1l1iIiii1III11Ilil + -101) Ilil1il1I1i11i1i1Il[8] = i1IllIllIil1iiilil1(I1IIiiIIIiiIl1li1ii, #{ 6123, 694, 5504, 3159, 1893, 1599, 2026, 6285, 5323, 4749, 5603, 299, 5265, 4728, 6814, 1123, 2574, 4622, 863 }, #{ 3000, 1152, 2294, 2122, 5539, 1821, 3459, 5189, 3348, 75, 2653, 552, 2394, 330, 671, 1413, 3221, 3518, 3795, 2278, 2877, 3274, 2630 } + I1l1iIiii1III11Ilil + -108) Ilil1il1I1i11i1i1Il[5] = i1IllIllIil1iiilil1(I1IIiiIIIiiIl1li1ii, #{2882}, #{ 5977, 757, 6948, 5255, 535, 5080, 3847, 6906, 6926 }) Ilil1il1I1i11i1i1Il[7] = i1IllIllIil1iiilil1(I1IIiiIIIiiIl1li1ii, #{6465}, #{ 4008, 2305, 6489, 2421, 1810, 5374, 2736, 3872, 2177, 2294, 39, 4731, 843, 3607, 2732, 2972, 3753, 3789 }) ilIIlI1i1II1IliI1lI[2][lIlIl11il1I1iill1iill] = Ilil1il1I1i11i1i1Il end I11liI1iii1iII11Iil() ilIIlI1i1II1IliI1lI[5] = I11liI1iii1iII11Iil() liliil1li11Ii1IIil1() local il111lil1liiliii1ll = liliil1li11Ii1IIil1() for lIlIl11il1I1iill1iill = IIiliilliIilliiiIi1, il111lil1liiliii1ll do ilIIlI1i1II1IliI1lI[1][lIlIl11il1I1iill1iill - IIiliilliIilliiiIi1] = l1i1I1il1Iiil1i1ll1() end I11liI1iii1iII11Iil() I11liI1iii1iII11Iil() liliil1li11Ii1IIil1() liliil1li11Ii1IIil1() local il111lil1liiliii1ll = liliil1li11Ii1IIil1() for lIlIl11il1I1iill1iill = IIiliilliIilliiiIi1, il111lil1liiliii1ll do ilIIlI1i1II1IliI1lI[7][lIlIl11il1I1iill1iill] = liliil1li11Ii1IIil1() end ilIIlI1i1II1IliI1lI[6] = I11liI1iii1iII11Iil() local il111lil1liiliii1ll = liliil1li11Ii1IIil1() - (#{ 4980, 220, 3211, 1025, 4234, 3350, 1045, 3986, 3789, 760, 3339, 3892, 1961, 5429, 596, 1573, 2750, 5442, 1216, 2882, 3328 } + I1l1iIiii1III11Ilil + 133625) local ll1i1illIIIi11lIlli = I11liI1iii1iII11Iil() for lIlIl11il1I1iill1iill = IIiliilliIilliiiIi1, il111lil1liiliii1ll do local lIlliiI1iliIIlIi11I1i local i11iiIi11ii1i1iilII = I11liI1iii1iII11Iil() if i11iiIi11ii1i1iilII == #{} then lIlliiI1iliIIlIi11I1i = lIlllliiI1i1lIIl1IlIi(lIl11Il11IiIIliIIlIlI(#{ 2918, 6189, 6123, 3184, 3622, 2044, 178, 711, 6632, 4717, 5798, 1389, 4430, 1679, 4649, 4799, 3641, 2168, 440, 5275, 4961, 3559, 6104, 3391 } + I1l1iIiii1III11Ilil + -15), #{4228, 4632}) end if i11iiIi11ii1i1iilII == #{ 6267, 2191, 2180, 3229, 4125, 2534, 4146, 203, 2359, 5179, 5051, 795, 106, 3899, 5976, 803, 6456, 3986, 1174, 6360, 3548, 2178, 4436 } + I1l1iIiii1III11Ilil + -99 then lIlliiI1iliIIlIi11I1i = lIlllliiI1i1lIIl1IlIi(lIl11Il11IiIIliIIlIlI(ll1i1illIIIi11lIlli), #{ 3485, 5851, 4877, 931 }) end if i11iiIi11ii1i1iilII == #{ 2517, 1085, 975, 5035, 1883, 3025, 120, 3147, 4108, 1066, 6081, 3152, 262, 2873, 4626, 4783, 3063, 6957, 3738, 4144, 2869, 4578 } + I1l1iIiii1III11Ilil + 21 then lIlliiI1iliIIlIi11I1i = I11II1lIIIli1llii1I() end if i11iiIi11ii1i1iilII == #{ 3068, 3421, 2788, 768, 2485, 6310, 1955, 5238, 2598, 6140, 4858, 2893, 1652, 5775, 138, 1927, 6331, 3762, 5126, 2902, 5365, 5132, 3106, 5694 } + I1l1iIiii1III11Ilil + -36 then lIlliiI1iliIIlIi11I1i = I11II1lIIIli1llii1I() end if i11iiIi11ii1i1iilII == #{ 5380, 956, 6820, 5155, 1874, 4001, 4142, 4751, 1143, 4773, 4302, 569, 1413, 4117, 5568, 3946, 6073, 2712, 3623, 2286, 537 } + I1l1iIiii1III11Ilil + 31 then lIlliiI1iliIIlIi11I1i = I11II1lIIIli1llii1I() end if i11iiIi11ii1i1iilII == #{ 5723, 153, 4739, 5380, 2969, 6198, 4797, 3307, 556, 4605, 4424, 247, 4142, 1680, 4221, 6922, 2242, 1421, 2220, 5204, 4708, 5544 } + I1l1iIiii1III11Ilil + 59 then lIlliiI1iliIIlIi11I1i = #{ 6482, 1760, 361, 1428, 4601, 250, 3223, 5511, 6054, 2596, 2063, 87, 1099, 5277, 4391, 3244, 279, 2493, 6956, 5086, 1880, 2943 } + I1l1iIiii1III11Ilil + 129427 == #{ 6482, 1760, 361, 1428, 4601, 250, 3223, 5511, 6054, 2596, 2063, 87, 1099, 5277, 4391, 3244, 279, 2493, 6956, 5086, 1880, 2943 } + I1l1iIiii1III11Ilil + 129427 end if i11iiIi11ii1i1iilII == #{ 3419, 4803, 4652, 2062, 2121, 6021, 6744, 3745, 343, 4355, 6563, 1734, 6384, 3500, 5782, 941, 5297, 1727, 5663, 276 } + I1l1iIiii1III11Ilil + -80 then lIlliiI1iliIIlIi11I1i = lIlllliiI1i1lIIl1IlIi(lIl11Il11IiIIliIIlIlI(#{ 2918, 6189, 6123, 3184, 3622, 2044, 178, 711, 6632, 4717, 5798, 1389, 4430, 1679, 4649, 4799, 3641, 2168, 440, 5275, 4961, 3559, 6104, 3391 } + I1l1iIiii1III11Ilil + -15), #{4228, 4632}) end if i11iiIi11ii1i1iilII == #{ 464, 5254, 2518, 1418, 2349, 4050, 6839, 6678, 1999, 2748, 3166, 2149, 5044, 635, 5249, 3220, 866, 6176, 6831, 987, 338, 1103, 4778 } + I1l1iIiii1III11Ilil + 70 then lIlliiI1iliIIlIi11I1i = lIlllliiI1i1lIIl1IlIi(lIl11Il11IiIIliIIlIlI(ll1i1illIIIi11lIlli), #{ 1723, 4672, 6632, 2716, 3498, 2636 }) end if i11iiIi11ii1i1iilII == #{ 2770, 3132, 5622, 2442, 4514, 4520, 2034, 4314, 1181, 2770, 5323, 1865, 2542, 6180, 4986, 1524, 6844, 964, 5287, 315, 6735 } + I1l1iIiii1III11Ilil + -66 then lIlliiI1iliIIlIi11I1i = #{ 1410, 85, 4732, 1998, 5900, 1720, 3789, 4831, 5024, 1756, 1165, 622, 5652, 5135, 5695, 5826, 3181, 3439, 811, 5496, 2059, 5795, 974 } + I1l1iIiii1III11Ilil + 112456 == #{ 1613, 4351, 6702, 5514, 995, 1374, 2918, 976, 205, 143, 1378, 1711, 2101, 4549, 819, 701, 1716, 4338, 3714, 586, 4084 } + I1l1iIiii1III11Ilil + 34777 end ilIIlI1i1II1IliI1lI[4][lIlIl11il1I1iill1iill - IIiliilliIilliiiIi1] = lIlliiI1iliIIlIi11I1i end for lIlIl11il1I1iill1iill = IIiliilliIilliiiIi1, iiIII11IIlIillii1iI do local Ilil1il1I1i11i1i1Il = ilIIlI1i1II1IliI1lI[2][lIlIl11il1I1iill1iill] local IIi1i1iiIiI111ili1I = l1llliiiIi1l1l1IiiI[Ilil1il1I1i11i1i1Il[6]] if IIi1i1iiIiI111ili1I == #{ 4919, 1613, 4320, 93 } then Ilil1il1I1i11i1i1Il[2] = ilIIlI1i1II1IliI1lI[4][Ilil1il1I1i11i1i1Il[7]] end if IIi1i1iiIiI111ili1I == #{ 2211, 6788, 3816 } then if Ilil1il1I1i11i1i1Il[5] > 255 then Ilil1il1I1i11i1i1Il[1] = true Ilil1il1I1i11i1i1Il[4] = ilIIlI1i1II1IliI1lI[4][Ilil1il1I1i11i1i1Il[5] - 256] end if Ilil1il1I1i11i1i1Il[9] > 255 then Ilil1il1I1i11i1i1Il[3] = true Ilil1il1I1i11i1i1Il[10] = ilIIlI1i1II1IliI1lI[4][Ilil1il1I1i11i1i1Il[9] - 256] end end if IIi1i1iiIiI111ili1I == #{1702} and Ilil1il1I1i11i1i1Il[5] > 255 then Ilil1il1I1i11i1i1Il[1] = true Ilil1il1I1i11i1i1Il[4] = ilIIlI1i1II1IliI1lI[4][Ilil1il1I1i11i1i1Il[5] - 256] end if IIi1i1iiIiI111ili1I == #{4427, 1791} and Ilil1il1I1i11i1i1Il[9] > 255 then Ilil1il1I1i11i1i1Il[3] = true Ilil1il1I1i11i1i1Il[10] = ilIIlI1i1II1IliI1lI[4][Ilil1il1I1i11i1i1Il[9] - 256] end end ilIIlI1i1II1IliI1lI[3] = I11liI1iii1iII11Iil() I11liI1iii1iII11Iil() liliil1li11Ii1IIil1() return ilIIlI1i1II1IliI1lI end local function lIlliIlil11IliiiiI111(ilIIlI1i1II1IliI1lI, lIli1l1I1I1IIIiiiIIll, iiII1i1Iill1Ilii1l1) local iiIliiii11IIIIiI1Ii, lIliilli1iIIiIlIllIIl = 11, 22 local IIilIIliii11IillIlI = ilIIlI1i1II1IliI1lI[2] local lI1IlI111Ii11Iii1Ii = 6 local ll1lIl1lIIi11IIl11i = ilIIlI1i1II1IliI1lI[1] local lI1IIilIIl1illlIIll = ilIIlI1i1II1IliI1lI[3] local iiIIllIl1i1IiiIil1l = ilIIlI1i1II1IliI1lI[5] local IiiliIilI11II1ii111 = 6 local lIliIiIiI1ilil1liII1i = ilIIlI1i1II1IliI1lI[7] local lIllIillII1IiiIli1lll = 5 local function llIII1lIi1iliilIiI1(...) local IllilIl1iiliili1ill = 0 local lIliilIlI1II1ii1I1i1I = { lIl11lIlll1llIl1lIiii({}, 1, iiIIllIl1i1IiiIil1l) } local Iilill11i1lIllilI11 = 1 local lIll1llIl11illl1i1Iii = {} local lIll1lIiIiiII1i1l1Iii = {} local lIli1l1I1I1IIIiiiIIll = lIIli1IIl1ilII1ll11() local lIl1l11iIllI1i1iiII1i = { ... } local I11I1i1l1lII1iiiii1 = #lIl1l11iIllI1i1iiII1i - 1 for lIlIl11il1I1iill1iill = 0, I11I1i1l1lII1iiiii1 do if lIlIl11il1I1iill1iill < lI1IIilIIl1illlIIll then lIliilIlI1II1ii1I1i1I[lIlIl11il1I1iill1iill] = lIl1l11iIllI1i1iiII1i[lIlIl11il1I1iill1iill + 1] end end local function lIliiI1lI111Ilii111ii(...) local lil1iiliII1iiIl1111 = lIlIll1Illl1iIiiI1lIl("#", ...) local IllIIil111ilIlllI1I = { ... } return lil1iiliII1iiIl1111, IllIIil111ilIlllI1I end local function I1lIIiIlilli1Ili111() while true do local llIllI1i1iliill1IIl = IIilIIliii11IillIlI[Iilill11i1lIllilI11] local lIli1iIiil1II1iI1Ilil = llIllI1i1iliill1IIl[6] Iilill11i1lIllilI11 = Iilill11i1lIllilI11 + 1 if lIli1iIiil1II1iI1Ilil >= 12 then if lIli1iIiil1II1iI1Ilil >= 18 then if lIli1iIiil1II1iI1Ilil < 21 then if lIli1iIiil1II1iI1Ilil < 19 then local II1lIil11iIiliili11, lil1iiliII1iiIl1111 if llIllI1i1iliill1IIl[1] then II1lIil11iIiliili11 = llIllI1i1iliill1IIl[4] else II1lIil11iIiliili11 = lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[5]] end if llIllI1i1iliill1IIl[3] then lil1iiliII1iiIl1111 = llIllI1i1iliill1IIl[10] else lil1iiliII1iiIl1111 = lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[9]] end lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[8]][II1lIil11iIiliili11] = lil1iiliII1iiIl1111 elseif lIli1iIiil1II1iI1Ilil ~= 20 then local I1i1IillIIIiiliiIIi = llIllI1i1iliill1IIl[8] local lIl1l11iIllI1i1iiII1i = llIllI1i1iliill1IIl[5] local l1l1l1ii1lilI1IIlIi = llIllI1i1iliill1IIl[9] local iI1iIll1i1ll1I1llIl, ll1ii1iiIllililiiii, I1lIIiIlilli1Ili111 if lIl1l11iIllI1i1iiII1i ~= 1 then if lIl1l11iIllI1i1iiII1i ~= 0 then ll1ii1iiIllililiiii = I1i1IillIIIiiliiIIi + lIl1l11iIllI1i1iiII1i - 1 else ll1ii1iiIllililiiii = IllilIl1iiliili1ill end ll1ii1iiIllililiiii, iI1iIll1i1ll1I1llIl = lIliiI1lI111Ilii111ii(lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi](lIl11lIlll1llIl1lIiii(lIliilIlI1II1ii1I1i1I, I1i1IillIIIiiliiIIi + 1, ll1ii1iiIllililiiii))) else ll1ii1iiIllililiiii, iI1iIll1i1ll1I1llIl = lIliiI1lI111Ilii111ii(lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi]()) end if l1l1l1ii1lilI1IIlIi ~= 1 then if l1l1l1ii1lilI1IIlIi ~= 0 then ll1ii1iiIllililiiii = I1i1IillIIIiiliiIIi + l1l1l1ii1lilI1IIlIi - 2 IllilIl1iiliili1ill = ll1ii1iiIllililiiii + 1 else ll1ii1iiIllililiiii = ll1ii1iiIllililiiii + I1i1IillIIIiiliiIIi - 1 IllilIl1iiliili1ill = ll1ii1iiIllililiiii end I1lIIiIlilli1Ili111 = 0 for lIlIl11il1I1iill1iill = I1i1IillIIIiiliiIIi, ll1ii1iiIllililiiii do I1lIIiIlilli1Ili111 = I1lIIiIlilli1Ili111 + 1 lIliilIlI1II1ii1I1i1I[lIlIl11il1I1iill1iill] = iI1iIll1i1ll1I1llIl[I1lIIiIlilli1Ili111] end else IllilIl1iiliili1ill = I1i1IillIIIiiliiIIi - 1 end for lIlIl11il1I1iill1iill = IllilIl1iiliili1ill + 1, iiIIllIl1i1IiiIil1l do lIliilIlI1II1ii1I1i1I[lIlIl11il1I1iill1iill] = nil end elseif llIllI1i1iliill1IIl[9] == 12 then Iilill11i1lIllilI11 = Iilill11i1lIllilI11 - 1 IIilIIliii11IillIlI[Iilill11i1lIllilI11] = { [6] = 22, [8] = (llIllI1i1iliill1IIl[8] - 168) % 256, [5] = (llIllI1i1iliill1IIl[5] - 168) % 256 } else local I1i1IillIIIiiliiIIi = llIllI1i1iliill1IIl[8] local il111lil1liiliii1ll = llIllI1i1iliill1IIl[5] local illII1ill11lliIilII = il111lil1liiliii1ll > 0 and il111lil1liiliii1ll - 1 or I11I1i1l1lII1iiiii1 - lI1IIilIIl1illlIIll if illII1ill11lliIilII < 0 then illII1ill11lliIilII = -1 end for lIlIl11il1I1iill1iill = I1i1IillIIIiiliiIIi, I1i1IillIIIiiliiIIi + illII1ill11lliIilII do lIliilIlI1II1ii1I1i1I[lIlIl11il1I1iill1iill] = lIl1l11iIllI1i1iiII1i[lI1IIilIIl1illlIIll + (lIlIl11il1I1iill1iill - I1i1IillIIIiiliiIIi) + 1] end if il111lil1liiliii1ll == 0 then IllilIl1iiliili1ill = I1i1IillIIIiiliiIIi + illII1ill11lliIilII for lIlIl11il1I1iill1iill = IllilIl1iiliili1ill + 1, iiIIllIl1i1IiiIil1l do lIliilIlI1II1ii1I1i1I[lIlIl11il1I1iill1iill] = nil end end end elseif lIli1iIiil1II1iI1Ilil >= 23 then if lIli1iIiil1II1iI1Ilil ~= 24 then if llIllI1i1iliill1IIl[9] == 249 then Iilill11i1lIllilI11 = Iilill11i1lIllilI11 - 1 IIilIIliii11IillIlI[Iilill11i1lIllilI11] = { [6] = 0, [8] = (llIllI1i1iliill1IIl[8] - 196) % 256, [5] = (llIllI1i1iliill1IIl[5] - 196) % 256 } else for lIlIl11il1I1iill1iill = llIllI1i1iliill1IIl[8], llIllI1i1iliill1IIl[5] do lIliilIlI1II1ii1I1i1I[lIlIl11il1I1iill1iill] = nil end end else lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[8]] = llIllI1i1iliill1IIl[5] ~= 0 if llIllI1i1iliill1IIl[9] ~= 0 then Iilill11i1lIllilI11 = Iilill11i1lIllilI11 + 1 end end elseif lIli1iIiil1II1iI1Ilil == 22 then if llIllI1i1iliill1IIl[9] == 53 then Iilill11i1lIllilI11 = Iilill11i1lIllilI11 - 1 IIilIIliii11IillIlI[Iilill11i1lIllilI11] = { [6] = 11, [8] = (llIllI1i1iliill1IIl[8] - 243) % 256, [5] = (llIllI1i1iliill1IIl[5] - 243) % 256 } else lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[8]] = iiII1i1Iill1Ilii1l1[llIllI1i1iliill1IIl[5]] end else lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[8]] = { lIl11lIlll1llIl1lIiii(lIIlI11Illii111liII, 1, llIllI1i1iliill1IIl[5] == 0 and 255 or llIllI1i1iliill1IIl[5]) } end elseif lIli1iIiil1II1iI1Ilil < 15 then if lIli1iIiil1II1iI1Ilil < 13 then lIll1llIl11illl1i1Iii[lIliilIlI1II1ii1I1i1I] = nil local I1i1IillIIIiiliiIIi = llIllI1i1iliill1IIl[8] local lIlIiIl11il1iiIIlllil = llIllI1i1iliill1IIl[5] if lIlIiIl11il1iiIIlllil == 1 then return true end local ll1ii1iiIllililiiii = I1i1IillIIIiiliiIIi + lIlIiIl11il1iiIIlllil - 2 if lIlIiIl11il1iiIIlllil == 0 then ll1ii1iiIllililiiii = IllilIl1iiliili1ill end return true, I1i1IillIIIiiliiIIi, ll1ii1iiIllililiiii elseif lIli1iIiil1II1iI1Ilil ~= 14 then lIli1l1I1I1IIIiiiIIll[llIllI1i1iliill1IIl[2]] = lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[8]] else lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[8]] = llIllI1i1iliill1IIl[2] end elseif lIli1iIiil1II1iI1Ilil < 16 then if llIllI1i1iliill1IIl[5] == 29 then Iilill11i1lIllilI11 = Iilill11i1lIllilI11 - 1 IIilIIliii11IillIlI[Iilill11i1lIllilI11] = { [6] = 17, [8] = (llIllI1i1iliill1IIl[8] - 89) % 256, [9] = (llIllI1i1iliill1IIl[9] - 89) % 256 } elseif llIllI1i1iliill1IIl[5] == 196 then Iilill11i1lIllilI11 = Iilill11i1lIllilI11 - 1 IIilIIliii11IillIlI[Iilill11i1lIllilI11] = { [6] = 12, [8] = (llIllI1i1iliill1IIl[8] - 204) % 256, [5] = (llIllI1i1iliill1IIl[9] - 204) % 256 } else local I1i1IillIIIiiliiIIi = llIllI1i1iliill1IIl[8] local IIl1i1lili11i1iilIl = I1i1IillIIIiiliiIIi + 2 local ilII11Ill1I1Illllll = { lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi](lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi + 1], lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi + 2]) } for lIlIl11il1I1iill1iill = 1, llIllI1i1iliill1IIl[9] do lIliilIlI1II1ii1I1i1I[IIl1i1lili11i1iilIl + lIlIl11il1I1iill1iill] = ilII11Ill1I1Illllll[lIlIl11il1I1iill1iill] end if lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi + 3] ~= nil then lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi + 2] = lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi + 3] else Iilill11i1lIllilI11 = Iilill11i1lIllilI11 + 1 end end elseif lIli1iIiil1II1iI1Ilil == 17 then if not not lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[8]] == (llIllI1i1iliill1IIl[9] == 0) then Iilill11i1lIllilI11 = Iilill11i1lIllilI11 + 1 end else lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[8]] = lIli1l1I1I1IIIiiiIIll[llIllI1i1iliill1IIl[2]] end elseif lIli1iIiil1II1iI1Ilil < 6 then if lIli1iIiil1II1iI1Ilil < 3 then if lIli1iIiil1II1iI1Ilil >= 1 then if lIli1iIiil1II1iI1Ilil == 2 then local lil1iiliII1iiIl1111 if llIllI1i1iliill1IIl[3] then lil1iiliII1iiIl1111 = llIllI1i1iliill1IIl[10] else lil1iiliII1iiIl1111 = lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[9]] end lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[8]] = lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[5]][lil1iiliII1iiIl1111] else Iilill11i1lIllilI11 = Iilill11i1lIllilI11 + (llIllI1i1iliill1IIl[7] - il1lili1iliIlI1111i) end else iiII1i1Iill1Ilii1l1[llIllI1i1iliill1IIl[5]] = lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[8]] end elseif lIli1iIiil1II1iI1Ilil < 4 then local II1lIil11iIiliili11, lil1iiliII1iiIl1111 if llIllI1i1iliill1IIl[1] then II1lIil11iIiliili11 = llIllI1i1iliill1IIl[4] else II1lIil11iIiliili11 = lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[5]] end if llIllI1i1iliill1IIl[3] then lil1iiliII1iiIl1111 = llIllI1i1iliill1IIl[10] else lil1iiliII1iiIl1111 = lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[9]] end if II1lIil11iIiliili11 == lil1iiliII1iiIl1111 ~= (llIllI1i1iliill1IIl[8] ~= 0) then Iilill11i1lIllilI11 = Iilill11i1lIllilI11 + 1 end elseif lIli1iIiil1II1iI1Ilil ~= 5 then local l11iI1IiI1IiIilIi1l = lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[5]] local lil1iiliII1iiIl1111 if llIllI1i1iliill1IIl[3] then lil1iiliII1iiIl1111 = llIllI1i1iliill1IIl[10] else lil1iiliII1iiIl1111 = lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[9]] end lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[8] + 1] = l11iI1IiI1IiIilIi1l lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[8]] = l11iI1IiI1IiIilIi1l[lil1iiliII1iiIl1111] else local II1lIil11iIiliili11, lil1iiliII1iiIl1111 if llIllI1i1iliill1IIl[1] then II1lIil11iIiliili11 = llIllI1i1iliill1IIl[4] else II1lIil11iIiliili11 = lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[5]] end if llIllI1i1iliill1IIl[3] then lil1iiliII1iiIl1111 = llIllI1i1iliill1IIl[10] else lil1iiliII1iiIl1111 = lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[9]] end lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[8]] = II1lIil11iIiliili11 + lil1iiliII1iiIl1111 end elseif lIli1iIiil1II1iI1Ilil >= 9 then if lIli1iIiil1II1iI1Ilil < 10 then local I1i1IillIIIiiliiIIi = llIllI1i1iliill1IIl[8] lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi] = lIllIil1I1i1IiIlIiI11(l1l1lii1l1liIiiiIil(lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi]), "`for` initial value must be a number") lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi + 1] = lIllIil1I1i1IiIlIiI11(l1l1lii1l1liIiiiIil(lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi + 1]), "`for` limit value must be a number") lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi + 2] = lIllIil1I1i1IiIlIiI11(l1l1lii1l1liIiiiIil(lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi + 2]), "`for` step value must be a number") lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi] = lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi] - lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi + 2] Iilill11i1lIllilI11 = Iilill11i1lIllilI11 + (llIllI1i1iliill1IIl[7] - il1lili1iliIlI1111i) elseif lIli1iIiil1II1iI1Ilil == 11 then lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[8]] = lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[5]] else local II1lIil11iIiliili11, lil1iiliII1iiIl1111 if llIllI1i1iliill1IIl[1] then II1lIil11iIiliili11 = llIllI1i1iliill1IIl[4] else II1lIil11iIiliili11 = lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[5]] end if llIllI1i1iliill1IIl[3] then lil1iiliII1iiIl1111 = llIllI1i1iliill1IIl[10] else lil1iiliII1iiIl1111 = lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[9]] end lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[8]] = II1lIil11iIiliili11 - lil1iiliII1iiIl1111 end elseif lIli1iIiil1II1iI1Ilil >= 7 then if lIli1iIiil1II1iI1Ilil ~= 8 then local I1i1IillIIIiiliiIIi = llIllI1i1iliill1IIl[8] local IiliIi1il11II1llI1I = lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi + 2] local illll1iIl1lIIIl1i1I = lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi] + IiliIi1il11II1llI1I lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi] = illll1iIl1lIIIl1i1I if IiliIi1il11II1llI1I > 0 then if illll1iIl1lIIIl1i1I <= lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi + 1] then Iilill11i1lIllilI11 = Iilill11i1lIllilI11 + (llIllI1i1iliill1IIl[7] - il1lili1iliIlI1111i) lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi + 3] = illll1iIl1lIIIl1i1I end elseif illll1iIl1lIIIl1i1I >= lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi + 1] then Iilill11i1lIllilI11 = Iilill11i1lIllilI11 + (llIllI1i1iliill1IIl[7] - il1lili1iliIlI1111i) lIliilIlI1II1ii1I1i1I[I1i1IillIIIiiliiIIi + 3] = illll1iIl1lIIIl1i1I end else local IIl1i1lili11i1iilIl = (llIllI1i1iliill1IIl[9] - 1) * 50 local iil1lilIliil1IIl1lI = llIllI1i1iliill1IIl[5] if iil1lilIliil1IIl1lI == 0 then iil1lilIliil1IIl1lI = IllilIl1iiliili1ill - llIllI1i1iliill1IIl[8] end for lIlIl11il1I1iill1iill = 1, iil1lilIliil1IIl1lI do lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[8]][IIl1i1lili11i1iilIl + lIlIl11il1I1iill1iill] = lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[8] + lIlIl11il1I1iill1iill] end end else local lIlill1l1l1ii1i1lIlIl = ll1lIl1lIIi11IIl11i[llIllI1i1iliill1IIl[7]] local lIliiIIii1iiilillilii = {} if lIlill1l1l1ii1i1lIlIl[lI1IlI111Ii11Iii1Ii] > 0 then do local illi1IlI1Iiliiili11 = {} lIliiIIii1iiilillilii = IiiiIiIl11II1IIl1l1({}, { __index = function(IllIIil111ilIlllI1I, lll1I1Il11iI1llIi1l) local IIiiIll11iiiliiIilI = illi1IlI1Iiliiili11[lll1I1Il11iI1llIi1l] return IIiiIll11iiiliiIilI[1][IIiiIll11iiiliiIilI[2]] end, __newindex = function(IllIIil111ilIlllI1I, lll1I1Il11iI1llIi1l, iIi1ilIiiIlilIiIiIi) local IIiiIll11iiiliiIilI = illi1IlI1Iiliiili11[lll1I1Il11iI1llIi1l] IIiiIll11iiiliiIilI[1][IIiiIll11iiiliiIilI[2]] = iIi1ilIiiIlilIiIiIi end }) for lIlIl11il1I1iill1iill = 1, lIlill1l1l1ii1i1lIlIl[lI1IlI111Ii11Iii1Ii] do local IIll1IIiiI1lIiIllll = IIilIIliii11IillIlI[Iilill11i1lIllilI11] if IIll1IIiiI1lIiIllll[IiiliIilI11II1ii111] == iiIliiii11IIIIiI1Ii then illi1IlI1Iiliiili11[lIlIl11il1I1iill1iill - 1] = { lIliilIlI1II1ii1I1i1I, IIll1IIiiI1lIiIllll[lIllIillII1IiiIli1lll] } elseif IIll1IIiiI1lIiIllll[IiiliIilI11II1ii111] == lIliilli1iIIiIlIllIIl then illi1IlI1Iiliiili11[lIlIl11il1I1iill1iill - 1] = { iiII1i1Iill1Ilii1l1, IIll1IIiiI1lIiIllll[lIllIillII1IiiIli1lll] } end Iilill11i1lIllilI11 = Iilill11i1lIllilI11 + 1 end if not lIll1llIl11illl1i1Iii[lIliilIlI1II1ii1I1i1I] then lIll1llIl11illl1i1Iii[lIliilIlI1II1ii1I1i1I] = {illi1IlI1Iiliiili11} else lIllIllliliiIIi111I(lIll1llIl11illl1i1Iii[lIliilIlI1II1ii1I1i1I], illi1IlI1Iiliiili11) end end end local IIlIII1IillI11iIIli = lIlliIlil11IliiiiI111(lIlill1l1l1ii1i1lIlIl, lIli1l1I1I1IIIiiiIIll, lIliiIIii1iiilillilii) lIliilIlI1II1ii1I1i1I[llIllI1i1iliill1IIl[8]] = IIlIII1IillI11iIIli end end end local lIll1IIliii1l1l1IllI1, iIIiiIiiI1illlIIll1, lIl111ilI1lll1I1IIllI, iIililll11lIlIl1liI = li1I11i1iIlliIllI1l(I1lIIiIlilli1Ili111) if lIll1IIliii1l1l1IllI1 then if lIl111ilI1lll1I1IIllI then return lIl11lIlll1llIl1lIiii(lIliilIlI1II1ii1I1i1I, lIl111ilI1lll1I1IIllI, iIililll11lIlIl1liI) end else l1I1liIili111Iili1I("Luraph Script:" .. (lIliIiIiI1ilil1liII1i[Iilill11i1lIllilI11 - 1] or "") .. ": " .. lIllIlII1iiIl11lI1iii(iIIiiIiiI1illlIIll1), 0) end end iI1iiI1iiilllilllII(llIII1lIi1iliilIiI1, lIli1l1I1I1IIIiiiIIll) return llIII1lIi1iliilIiI1 end local lIll1lii1ll1IiI1lilil = l1i1I1il1Iiil1i1ll1() return lIlliIlil11IliiiiI111(lIll1lii1ll1IiI1lilil, lIli1l1I1I1IIIiiiIIll)() end return lI1iii1lIII1iliIi1l("LPH!", lIIli1IIl1ilII1ll11()) 
